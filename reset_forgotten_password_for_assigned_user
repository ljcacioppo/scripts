#!/bin/bash

#API User
jamfUser=""
#API URL
jamfURL=""
#Local Mac Admin Username
AdminUserHere="admin_username"

function DecryptString() {
	# Usage: ~$ DecryptString "Encrypted String" "Salt" "Passphrase"
	echo "${1}" | /usr/bin/openssl enc -aes256 -d -a -A -S "${2}" -k "${3}"
}

#Using encrypted script parameters for Jamf API Password. Replace salt and passphrase, and utilize parameter 4 in Jamf Pro for the encrypted string
jamfPass=$(DecryptString $4 'salt' 'passphrase')

#Get the serial number
serialNumber=$(system_profiler SPHardwareDataType | grep Serial | awk '{ print $4 }')


#Find the assigned user for the computer from the Jamf Inventory Record
UserToBeReset=$(/usr/bin/curl -sk \
--user "$jamfUser":"$jamfPass" \
--header "Accept: text/xml" \
--request GET \
$jamfURL/computers/serialnumber/"$serialNumber" | \
xmllint --xpath '/computer/location/username/text()' -)

#Using encrypted script parameters for local admin Password. Replace salt and passphrase, and utilize parameter 4 in Jamf Pro for the encrypted string
AdminPasswordHere=$(DecryptString $5 'salt' 'passphrase')

#Prompt User for new password
NewPasswordHere=$(osascript -e 'text returned of (display dialog "Please enter your password. This will reset your user account password to be what you type here" default answer "password" buttons {"OK"} default button 1)')

#Set password and delete keychains
if [[ $UserToBeReset != "jamfadmin" ]] && [[ $UserToBeReset != "root" ]];
then
	sysadminctl -adminUser $AdminUserHere -adminPassword $AdminPasswordHere -resetPasswordFor $UserToBeReset -newPassword $NewPasswordHere
	echo "User is resetting the password for $UserToBeReset"
	/bin/rm -rf /Users/"UserToBeReset"/Library/Keychains/*
	"/Library/Application Support/JAMF/bin/jamfHelper.app/Contents/MacOS/jamfhelper" -windowType "hud" -windowPosition "$windowPosition" -title "Password Reset Status" -heading "Success" -description "Password change successful. Reboot is required." -button1 "Reboot" -defaultButton 1
else
	"/Library/Application Support/JAMF/bin/jamfHelper.app/Contents/MacOS/jamfhelper" -windowType "hud" -windowPosition "$windowPosition" -title "Unnaproved Password Reset" -heading "Username Protected" -description "The account entered for password reset is not allowed" -button1 "OK" -defaultButton 1
	echo "User attempted to reset the password for $UserToBeReset"
    exit 1
fi

